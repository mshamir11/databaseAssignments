use ecommerce;
/* SET foreign_key_checks = 0;
update Orders
inner join (select order_Number from Orders 
where user_ID=8888) as A
on Orders.order_Number=A.order_Number
set user_ID=88888;
SET foreign_key_checks = 0;


*/

update Products
inner join 
(select B.product_ID,B.price,count(B.date_visited) as Views
from
(select A.product_ID,A.date_visited,A.price
from
(select Products.product_ID, Products.price,
History.user_ID,History.date_visited from
History inner join Products
on Products.product_ID =History.product_ID
and Products.price<5000) as A
where A.date_visited> now()- INTERVAL 3 month) as B
group by B.product_ID) as C
on Products.product_ID=C.product_ID
and C.Views>10
set Products.price=1.1*Products.price;

create table History(
  history_ID int not null auto_increment,
  user_ID int,
  product_ID int,
  date_visited date,
  time_visited time,
  primary key (history_ID)
); 

insert into History (user_ID, product_ID, date_visited, time_visited) values ('3','24','2020-01-1','1000'),('3','24','2020-01-2','1000'),('3','24','2020-01-3','1000'),('3','24','2020-01-4','1000'),('3','24','2020-01-5','1000'),('3','24','2020-01-6','1000'),('3','24','2020-01-7','1000'),('3','24','2020-01-8','1000'),('3','24','2020-01-9','1000'),('3','24','2020-01-10','1000'),('3','24','2020-01-11','1000'),('3','24','2020-01-12','1000'),('3','24','2020-01-13','1000'),('3','24','2020-01-14','1000'),('3','24','2020-01-15','1000'),('3','24','2020-01-16','1000'),('3','24','2020-01-17','1000'),('3','24','2020-01-18','1000'),('3','24','2020-01-19','1000'),('3','24','2020-01-20','1000'),('3','24','2020-01-21','1000'),('3','24','2020-01-22','1000'),('3','24','2020-01-23','1000'),('3','24','2020-01-24','1000'),('3','24','2020-01-25','1000'),('3','24','2020-01-26','1000'),('3','24','2020-01-27','1000'),('3','24','2020-01-28','1000');
insert into History (user_ID, product_ID, date_visited, time_visited)values ('5','23','2020-01-2','1000'),('5','23','2020-01-3','1000'),('5','23','2020-01-4','1000'),('5','23','2020-01-5','1000'),('5','23','2020-01-6','1000'),('5','23','2020-01-7','1000'),('5','23','2020-01-8','1000'),('5','23','2020-01-9','1000'),('5','23','2020-01-10','1000'),('5','23','2020-01-11','1000'),('5','23','2020-01-12','1000'),('5','23','2020-01-13','1000'),('5','23','2020-01-14','1000'),('5','23','2020-01-15','1000'),('5','23','2020-01-16','1000'),('5','23','2020-01-17','1000'),('5','23','2020-01-18','1000'),('5','23','2020-01-19','1000'),('5','23','2020-01-20','1000'),('5','23','2020-01-21','1000'),('5','23','2020-01-22','1000'),('5','23','2020-01-23','1000'),('5','23','2020-01-24','1000'),('5','23','2020-01-25','1000'),('5','23','2020-01-26','1000'),('5','23','2020-01-27','1000'),('5','23','2020-01-28','1000');
insert into History (user_ID, product_ID, date_visited, time_visited)values ('7','25','2020-01-1','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-11-5','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-11-5','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-11-5','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-11-5','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-11-5','1000');
insert into History (user_ID, product_ID, date_visited, time_visited)values ('7','26','2020-01-1','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000'),('7','25','2020-7-1','1000'),('7','25','2020-8-2','1000'),('7','25','2020-9-3','1000'),('7','25','2020-10-4','1000');
insert into History (user_ID, product_ID, date_visited, time_visited) values ('9','28','2021-01-30','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000'),('8','27','2021-1-1','1000'),('8','27','2021-2-2','1000');
insert into History (user_ID, product_ID, date_visited, time_visited) values ('10','2','2021-01-30','1000'),('10','2','2021-1-1','1000'),('10','2','2021-2-2','1000'),('10','2','2021-1-1','1000'),('10','2','2021-2-2','1000'),('10','2','2021-1-1','1000'),('10','2','2021-2-2','1000'),('10','2','2021-1-1','1000'),('10','2','2021-2-2','1000');
insert into History (user_ID, product_ID, date_visited, time_visited) values ('11','2','2021-01-30','1000'),('11','2','2021-1-1','1000'),('11','2','2021-2-2','1000'),('11','2','2021-1-1','1000'),('11','2','2021-2-2','1000'),('11','2','2021-1-1','1000'),('11','2','2021-2-2','1000'),('11','2','2021-1-1','1000'),('11','2','2021-2-2','1000');
insert into History (user_ID, product_ID, date_visited, time_visited) values ('12','52','2021-01-30','1000'),('12','52','2021-1-1','1000'),('12','52','2021-2-2','1000'),('12','52','2021-1-1','1000'),('12','52','2021-2-2','1000'),('12','52','2021-1-1','1000'),('12','52','2021-2-2','1000'),('12','52','2021-1-1','1000'),('12','52','2021-2-2','1000');
insert into History (user_ID, product_ID, date_visited, time_visited) values ('13','52','2021-01-30','1000'),('13','52','2021-1-1','1000'),('13','52','2021-2-2','1000'),('13','52','2021-1-1','1000'),('13','52','2021-2-2','1000'),('13','52','2021-1-1','1000'),('13','52','2021-2-2','1000'),('13','52','2021-1-1','1000'),('13','52','2021-2-2','1000'),('13','52','2021-1-1','1000'),('13','52','2021-2-2','1000');


select C.user_name,C.email,C.phone from 
(select B.user_name,B.email,B.phone,
SUM(B.price) total_purchase from
(select A.*,Products.price from
(select Users.user_ID,Users.user_name,Users.email,
Users.phone,Orders.product_ID 
from Users inner join Orders
on Users.user_ID = Orders.user_ID
and Users.city='Madrid') as A
inner join Products
on A.product_ID = Products.product_ID) as B
group by B.user_name,B.email,B.phone) as C
where C.total_purchase>10000;



select Cart.user_ID,Users.phone,
Users.email
from Cart,Users where
Cart.quantity<4
and Users.user_ID=Cart.user_ID;

select Products.retailer_ID
from Products inner join
(select *
from Orders
where Orders.user_ID=1) as A
on A.product_ID=Products.product_ID;



select * from Orders 
where user_ID=1;